[{"D:\\simpl-shopping-cart-react-ts\\src\\index.tsx":"1","D:\\simpl-shopping-cart-react-ts\\src\\App.tsx":"2","D:\\simpl-shopping-cart-react-ts\\src\\pages\\Home\\Home.tsx":"3","D:\\simpl-shopping-cart-react-ts\\src\\api\\fakeStore.ts":"4","D:\\simpl-shopping-cart-react-ts\\src\\contexts\\ProductContext.tsx":"5","D:\\simpl-shopping-cart-react-ts\\src\\contexts\\FactoryContext.js":"6","D:\\simpl-shopping-cart-react-ts\\src\\types\\CartItemType.const.ts":"7","D:\\simpl-shopping-cart-react-ts\\src\\pages\\Home\\Home.styles.ts":"8","D:\\simpl-shopping-cart-react-ts\\src\\pages\\Item\\Item.tsx":"9","D:\\simpl-shopping-cart-react-ts\\src\\pages\\Item\\Item.styles.ts":"10"},{"size":293,"mtime":1611478903744,"results":"11","hashOfConfig":"12"},{"size":122,"mtime":1611463437499,"results":"13","hashOfConfig":"12"},{"size":1816,"mtime":1611485593482,"results":"14","hashOfConfig":"12"},{"size":150,"mtime":1611466752357,"results":"15","hashOfConfig":"12"},{"size":2460,"mtime":1611484097864,"results":"16","hashOfConfig":"12"},{"size":1254,"mtime":1611483660992,"results":"17","hashOfConfig":"12"},{"size":222,"mtime":1611477877875,"results":"18","hashOfConfig":"12"},{"size":99,"mtime":1611484720412,"results":"19","hashOfConfig":"12"},{"size":733,"mtime":1611485338909,"results":"20","hashOfConfig":"12"},{"size":502,"mtime":1611485199544,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nbqdcp",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\simpl-shopping-cart-react-ts\\src\\index.tsx",[],"D:\\simpl-shopping-cart-react-ts\\src\\App.tsx",[],"D:\\simpl-shopping-cart-react-ts\\src\\pages\\Home\\Home.tsx",["43","44","45","46","47","48"],"D:\\simpl-shopping-cart-react-ts\\src\\api\\fakeStore.ts",[],"D:\\simpl-shopping-cart-react-ts\\src\\contexts\\ProductContext.tsx",["49"],"import { ProductDispatchTypes } from '../intefaces/ICartItem';\r\nimport { CART_ITEM_CONSTAINTS } from '../types/CartItemType.const'\r\nimport { CartItemType } from '../types/CartItemType';\r\nimport fakeStore from '../api/fakeStore';\r\nimport { Dispatch } from 'react';\r\nimport FactoryContext from './FactoryContext';\r\n\r\n\r\n\r\n\r\nexport type ProductContextType = {\r\n    data: CartItemType[],\r\n    isLoading: boolean,\r\n    error: string,\r\n}\r\n\r\n\r\nconst initialState: ProductContextType = {\r\n    data: [],\r\n    isLoading: false,\r\n    error: '',\r\n} \r\n\r\n\r\nconst productReducer = (state: ProductContextType = initialState, action: ProductDispatchTypes): ProductContextType => {\r\n    switch (action.type) {\r\n        case CART_ITEM_CONSTAINTS.GET_LIST_PRODUCTS_REQUEST:\r\n            return { ...state, isLoading: action.payload, error: '' }\r\n        case CART_ITEM_CONSTAINTS.GET_LIST_PRODUCTS_SUCCESS:\r\n            return { ...state, data: action.payload, isLoading: false, error: '' }\r\n        case CART_ITEM_CONSTAINTS.GET_LIST_PRODUCTS_REJECT:\r\n            return { ...state, isLoading: false, error: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/** @summary getListProduct() return list products get from api (in success case)\r\n * @param dispatch implement ProductDispatchTypes\r\n * => Dipatch implment inteface ProductDispatchTypes \r\n * => Dispatch in this case is call an Object (Action Creator)\r\n * => Has no call signatures \r\n * => Inject params of dispatch react to invoke\r\n */\r\nconst getListProducts = (dispatch: Dispatch<ProductDispatchTypes>) => {\r\n    return async (): Promise<void> => {\r\n        dispatch({\r\n            type: CART_ITEM_CONSTAINTS.GET_LIST_PRODUCTS_REQUEST,\r\n            payload: true\r\n        })\r\n        try {\r\n            const response = await fakeStore.get('/products');\r\n            dispatch({\r\n                type: CART_ITEM_CONSTAINTS.GET_LIST_PRODUCTS_SUCCESS,\r\n                payload: response.data\r\n            })\r\n        } catch (e) {\r\n            dispatch({\r\n                type: CART_ITEM_CONSTAINTS.GET_LIST_PRODUCTS_REJECT,\r\n                payload: 'Something went wrong -> '\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst getTotalItems = () => null;\r\n\r\n\r\nconst handleAddToCart = () => null;\r\n\r\nconst handleRemoveFromCart = () => null;\r\n\r\n\r\n\r\n\r\n\r\nexport const { Context, Provider } = FactoryContext(\r\n    productReducer,\r\n    { getListProducts,handleAddToCart,handleRemoveFromCart },\r\n    []\r\n);","D:\\simpl-shopping-cart-react-ts\\src\\contexts\\FactoryContext.js",["50"],"D:\\simpl-shopping-cart-react-ts\\src\\types\\CartItemType.const.ts",[],"D:\\simpl-shopping-cart-react-ts\\src\\pages\\Home\\Home.styles.ts",[],"D:\\simpl-shopping-cart-react-ts\\src\\pages\\Item\\Item.tsx",[],"D:\\simpl-shopping-cart-react-ts\\src\\pages\\Item\\Item.styles.ts",[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":18},{"ruleId":"51","severity":1,"message":"55","line":8,"column":8,"nodeType":"53","messageId":"54","endLine":8,"endColumn":19},{"ruleId":"51","severity":1,"message":"56","line":9,"column":8,"nodeType":"53","messageId":"54","endLine":9,"endColumn":13},{"ruleId":"51","severity":1,"message":"57","line":36,"column":12,"nodeType":"53","messageId":"54","endLine":36,"endColumn":21},{"ruleId":"51","severity":1,"message":"58","line":36,"column":22,"nodeType":"53","messageId":"54","endLine":36,"endColumn":34},{"ruleId":"59","severity":1,"message":"60","line":41,"column":8,"nodeType":"61","endLine":41,"endColumn":10,"suggestions":"62"},{"ruleId":"51","severity":1,"message":"63","line":67,"column":7,"nodeType":"53","messageId":"54","endLine":67,"endColumn":20},{"ruleId":"64","severity":1,"message":"65","line":11,"column":1,"nodeType":"66","endLine":39,"endColumn":3},"@typescript-eslint/no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'AddCartIcon' is defined but never used.","'Badge' is defined but never used.","'cartItems' is assigned a value but never used.","'setCartItems' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getListProducts'. Either include it or remove the dependency array.","ArrayExpression",["67"],"'getTotalItems' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"68","fix":"69"},"Update the dependencies array to be: [getListProducts]",{"range":"70","text":"71"},[1127,1129],"[getListProducts]"]